# This is the main configuration file for the application.
# ~~~~~
project.name=update-wcs-lpn
project.version="1.1"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"

# The application languages
# ~~~~~
play.i18n.langs = [ "en-SG" ]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

#SQL Database configuration
db.default.db.driver="com.microsoft.sqlserver.jdbc.SQLServerDriver"
default.db.host=${?SLAVE_2017_DB_HOST}
default.db.port=${?SLAVE_2017_DB_PORT}
default.db.name=${?SLAVE_2017_DB_NAME}
db.default.url="jdbc:sqlserver://"${?default.db.host}":"${?default.db.port}";databaseName="${?default.db.name}
db.default.username=${?SLAVE_2017_DB_USERNAME}
db.default.password=${?SLAVE_2017_DB_PASSWORD}

# See https://www.playframework.com/documentation/2.4.x/SettingsJDBC
play.db {
  default1.pool = "hikaricp"
  default1.prototype = {
    hikaricp {
      poolName = "west_fc_scale_2017_cp"
      connectionTimeout = 2 seconds       # The connection timeout
      validationTimeout = 1 seconds       # The validation timeout to use
      idleTimeout = 5 minutes             # The idle timeout
      maxLifetime = 20 minutes            # The max lifetime of a connection
      minimumIdle = 2                     # If non null, sets the minimum number of idle connections to maintain.
      maximumPoolSize = 10                # The maximum number of connections to make.
      initializationFailFast = true       # Sets whether or not construction of the pool should fail if the minimum number of connections coludn't be created.
      registerMbeans = false              # Sets whether mbeans should be registered
      connectionInitSql = null            # A SQL statement that will be executed after every new connection creation before adding it to the pool
      leakDetectionThreshold = 30 seconds # If non null, sets the threshold for the amount of time that a connection has been out of the pool before it is considered to have leaked
    }
  }
}

# Commons plugin values
commons.cors.site="*"

#statsd
statsd.enabled = true
